var t=Object.defineProperty,e=(e,s,i)=>(((e,s,i)=>{s in e?t(e,s,{enumerable:!0,configurable:!0,writable:!0,value:i}):e[s]=i})(e,"symbol"!=typeof s?s+"":s,i),i);import{P as s}from"./phaser.306bab35.js";!function(){const t=document.createElement("link").relList;if(!(t&&t.supports&&t.supports("modulepreload"))){for(const t of document.querySelectorAll('link[rel="modulepreload"]'))e(t);new MutationObserver((t=>{for(const s of t)if("childList"===s.type)for(const t of s.addedNodes)"LINK"===t.tagName&&"modulepreload"===t.rel&&e(t)})).observe(document,{childList:!0,subtree:!0})}function e(t){if(t.ep)return;t.ep=!0;const e=function(t){const e={};return t.integrity&&(e.integrity=t.integrity),t.referrerpolicy&&(e.referrerPolicy=t.referrerpolicy),"use-credentials"===t.crossorigin?e.credentials="include":"anonymous"===t.crossorigin?e.credentials="omit":e.credentials="same-origin",e}(t);fetch(t.href,e)}}();class i extends Phaser.Scene{constructor(){super("Boot")}preload(){this.load.setPath("./assets"),this.load.image("ground","ground.png"),this.load.image("cloud","cloud.png")}create(){this.scene.start("Preload")}}const n="GAME_STARTED",a="GAME_PLAYER_DIED",h="GAME_RESTARTED",r="GAME_SPEED_UPDATED",o="GAME_SCORE_TIER_UPDATED";class d extends Phaser.Scene{constructor(){super("Preload")}preload(){this.load.setPath("./assets"),this.load.image("dino-idle","dino-idle-2.png"),this.load.image("dino-hurt","dino-hurt.png"),this.loadAudio("dino-hurt"),this.loadAudio("dino-jump"),this.loadAudio("dino-run-start"),this.loadAudio("dino-down"),this.load.spritesheet("dino-down","dino-down-2.png",{frameWidth:118,frameHeight:94}),this.load.spritesheet("dino-run","dino-run.png",{frameWidth:88,frameHeight:94});for(let t=0;t<6;t++){const e=t+1;this.load.image(`cactus-${e}`,`cactuses_${e}.png`)}for(let t=0;t<1;t++){const e=t+1;this.load.spritesheet(`bird-${e}`,`enemy-bird-${e}.png`,{frameWidth:92,frameHeight:77})}this.load.image("restart","restart.png"),this.load.image("game-over","game-over.png"),this.load.image("sound-on","sound-on.png"),this.load.image("sound-off","sound-off.png"),this.loadAudio("score"),this.loadAudio("background-lose"),this.loadAudio("background")}create(){this.scene.start("Play")}loadAudio(t){this.load.audio(t,[".mp3",".ogg",".m4a"].map((e=>`${t}${e}`)))}}class c extends Phaser.Physics.Arcade.Group{constructor(t,s){const i=t.scale.width;super(t.physics.world,t,[t.add.image(i/2,170,"cloud"),t.add.image(i-80,80,"cloud"),t.add.image(i/1.3,100,"cloud")]),e(this,"gameSpeed"),e(this,"state","paused"),e(this,"cleanupTimer",0),e(this,"cleanupTimerInterval",10),this.gameSpeed=s,this.setVisible(!1),t.add.existing(this),t.physics.add.existing(this),this.init()}init(){this.scene.events.on(Phaser.Scenes.Events.UPDATE,this.update,this),this.scene.events.on(n,this.start,this),this.scene.events.on(r,(t=>{this.gameSpeed=t,this.setVelocityX(-this.gameSpeed/20)}),this)}update(t,e){"running"===this.state&&(this.cleanupTimer+=e,this.cleanupTimer>=this.cleanupTimerInterval&&(this.cleanupTimer=0,this.cleanup()))}start(){this.state="running",this.setVisible(!0),this.setVelocityX(-this.gameSpeed/20)}cleanup(){this.getChildren().forEach((t=>{t.getBounds().right<0&&t.setX(this.scene.scale.width+t.width)}),this)}}class l extends Phaser.GameObjects.Image{constructor(t,{key:s,x:i,y:n,onClick:a}){super(t,i,n,s,0),e(this,"onClick"),e(this,"onClickThis"),t.add.existing(this),this.init({onClick:a})}init({onClick:t}){this.setInteractive({cursor:"pointer"}).on("pointerover",(()=>{this.scene.tweens.add({scale:1.25,targets:this,duration:250,ease:Phaser.Math.Easing.Sine.InOut})}),this).on("pointerout",(()=>{this.scene.tweens.add({scale:1,targets:this,duration:250,ease:Phaser.Math.Easing.Sine.InOut})}),this).on("pointerdown",t)}}class u extends Phaser.GameObjects.Container{constructor(t,s){const{width:i,height:n}=t.scale;super(t,i/2,n/2),e(this,"gameOverText"),e(this,"restartButton"),this.setVisible(!1),t.add.existing(this),t.physics.add.existing(this),this.init(s)}init(t){this.gameOverText=this.scene.add.image(0,-30,"game-over").setOrigin(.5);const e=this;this.restartButton=new l(this.scene,{x:0,y:30,key:"restart",onClick:()=>{t(),e.setVisible(!1)}}).setOrigin(.5),this.add([this.gameOverText,this.restartButton]),this.scene.events.on(a,(()=>this.setVisible(!0)),this),this.scene.events.on(h,(()=>this.setVisible(!1)),this)}}class p extends Phaser.Physics.Arcade.Group{constructor(t,s){super(t.physics.world,t),e(this,"gameSpeed"),e(this,"state","paused"),e(this,"obstacleLookup",[]),e(this,"spawnInterval",1500),e(this,"cleanupTimer",0),e(this,"cleanupTimerInterval",100),e(this,"spawnTimer",0),e(this,"spawnXRange",{min:150,max:300}),t.add.existing(this),t.physics.add.existing(this),this.gameSpeed=s,this.init()}init(){for(let t=1;t<=6;t++)this.obstacleLookup.push({type:"cactus",key:`cactus-${t}`});for(let t=1;t<=1;t++)this.obstacleLookup.push({type:"bird",key:`bird-${t}`}),this.scene.anims.create({key:`bird-${t}-fly`,frames:this.scene.anims.generateFrameNumbers(`bird-${t}`),frameRate:6,repeat:-1});this.scene.events.on(Phaser.Scenes.Events.UPDATE,this.update,this),this.scene.events.on(n,this.start,this),this.scene.events.on(h,this.start,this),this.scene.events.on(a,this.pause,this),this.scene.events.on(r,(t=>{this.gameSpeed=t,this.getChildren().forEach((t=>{t.setVelocityX(-this.gameSpeed)}),this)}),this)}update(t,e){"running"===this.state&&(this.spawnTimer+=e,this.spawnTimer>=this.spawnInterval&&(this.spawnTimer=0,this.spawn()),this.cleanupTimer+=e,this.cleanupTimer>=this.cleanupTimerInterval&&(this.cleanupTimer=0,this.cleanup()))}start(){this.state="running"}pause(){this.state="paused"}spawn(){const t=this.scene.scale.height,e=this.scene.scale.width,s=Math.floor(Math.random()*this.obstacleLookup.length),i=this.obstacleLookup[s],n=e+Phaser.Math.Between(this.spawnXRange.min,this.spawnXRange.max);if("bird"===i.type){const e=0===Phaser.Math.Between(0,1);this.spawnBird(i.key,n,t-(e?20:70))}else this.spawnCactus(i.key,n,t)}spawnBird(t,e,s){const i=this.create(e,s,t).setOrigin(0,1).setImmovable(!0).setVelocityX(-this.gameSpeed);i.setBodySize(i.width-15,i.height-20),i.anims.play(`${t}-fly`,!0)}spawnCactus(t,e,s){this.create(e,s,t).setOrigin(0,1).setImmovable(!0).setVelocityX(-this.gameSpeed)}cleanup(){this.getChildren().forEach((t=>{t.getBounds().right<0&&this.remove(t,!0,!0)}),this)}}class g extends Phaser.Physics.Arcade.Sprite{constructor(t,s){super(t,0,t.scale.height,"dino-run",0),e(this,"gameSpeed"),e(this,"hasRanOnce",!1),e(this,"state","idle"),e(this,"cursors"),e(this,"idleHitBox"),e(this,"idleEvent"),e(this,"idleBlinks",0),e(this,"inJumpLag"),this.gameSpeed=s,t.add.existing(this),t.physics.add.existing(this),this.init()}init(){this.cursors=this.scene.input.keyboard.createCursorKeys(),this.idleHitBox=new Phaser.Geom.Rectangle(0,50,100,this.scene.scale.height-50),this.setInteractive({cursor:"pointer"}),this.setOrigin(0,1).setDepth(1).setGravityY(5e3).setOffset(20,0).setCollideWorldBounds(!0),this.setRegularHitBox(),this.scene.events.on(Phaser.Scenes.Events.UPDATE,this.update,this),this.initAnimations(),this.idle(),this.scene.events.on(n,this.run,this),this.scene.events.on(a,this.die,this),this.scene.events.on(h,this.run,this)}initAnimations(){this.anims.create({key:"dino-idle",frames:this.anims.generateFrameNumbers("dino-run",{start:0,end:2}),frameRate:5,repeat:0}),this.anims.create({key:"dino-run",frames:this.anims.generateFrameNumbers("dino-run",{start:2,end:3}),frameRate:10,repeat:-1}),this.anims.create({key:"dino-blink",frames:this.anims.generateFrameNumbers("dino-run",{start:0,end:1}),frameRate:5,repeat:-1}),this.anims.create({key:"dino-down",frames:this.anims.generateFrameNumbers("dino-down",{start:0,end:1}),frameRate:10,repeat:-1})}initSounds(){this.scene.sound.add("dino-hurt"),this.scene.sound.add("dino-run-start"),this.scene.sound.add("dino-down"),this.scene.sound.add("dino-jump")}update(){if("dead"===this.state)return;const{space:t,down:e}=this.cursors,s=Phaser.Input.Keyboard.JustDown(t),i=this.body.onFloor(),n=Phaser.Input.Keyboard.JustUp(e),a=this.scene.input.activePointer;let h=a.isDown&&!a.rightButtonDown();h&&"idle"===this.state&&(this.idleHitBox.contains(a.x,a.y)||(h=!1)),i&&((s||h)&&this.jump(),"idle"===this.state||this.inJumpLag||("down"!==this.state&&e.isDown&&this.getDown(),(n||"jumping"===this.state&&!this.inJumpLag)&&this.run()))}jump(){this.state="jumping",this.scene.sound.play("dino-jump"),this.idleEvent&&this.idleEvent.remove(),this.setVelocityY(-1600),this.play("dino-blink",!0),this.inJumpLag=!0,setTimeout((()=>{this.inJumpLag=!1,this.setRegularHitBox()}),50)}die(){this.state="dead",this.stop(),this.setTexture("dino-hurt",0),this.scene.sound.play("dino-hurt"),this.setRegularHitBox(),this.scene.tweens.add({targets:this,y:this.scene.scale.height,duration:250,ease:"Linear",onComplete:()=>{},callbackScope:this})}restart(){this.initRun(),this.run()}initRun(){this.scene.tweens.add({targets:this,x:50,duration:500,ease:"Linear",callbackScope:this})}run(){this.hasRanOnce||(this.input.cursor="auto",this.setInteractive({cursor:"default"}),this.hasRanOnce=!0,this.scene.sound.play("dino-run-start",{volume:.3})),this.state="running",this.play("dino-run",!0),this.setRegularHitBox(),this.getBounds().left<50&&this.initRun()}getDown(){this.state="down",this.play("dino-down",!0),this.scene.sound.play("dino-down",{volume:.5}),this.body.setSize(this.body.width,58),this.setOffset(60,34)}idle(){this.state="idle",this.setRegularHitBox(),this.idleEvent=this.scene.time.addEvent({delay:2e3,callback:()=>{"idle"===this.state&&(this.idleBlinks<5?(this.play("dino-idle",!0),++this.idleBlinks):(this.idleBlinks=0,this.play("dino-run",!0)))},callbackScope:this,loop:!0})}setRegularHitBox(){this.body.setSize(44,92),this.body.setOffset(20,0)}}const m=(t,e=0)=>{var s;const i=(t=>{var e;if(!t)throw new Error("Key not specified");try{const e=localStorage.getItem(t);return null!==e?e:void 0}catch(s){console.error(`Error getting ${t} from local storage. Error: ${null==(e=s||"")?void 0:e.toString()}`,{key:t},s)}})(t);if(!i)return e;try{const t=parseInt(i);return isNaN(t)?e:t}catch(n){console.error(`Error parsing ${i} from key ${t} to int from local storage. Error: ${null==(s=n||"")?void 0:s.toString()}`,{stringValue:i,key:t},n)}return e};class y extends Phaser.GameObjects.Container{constructor(t){super(t,0,0),e(this,"bestScoreKey","bestScore"),e(this,"state","stopped"),e(this,"currentText"),e(this,"bestText"),e(this,"bestTextPrefix"),e(this,"best",0),e(this,"current",0),e(this,"interval",25),e(this,"delta",0),this.setVisible(!1),t.add.existing(this),t.physics.add.existing(this),this.init()}init(){this.scene.sound.add("score"),this.scene.events.on(Phaser.Scenes.Events.UPDATE,this.update,this),this.best=m(this.bestScoreKey);const t=this.scene.scale.width;this.currentText=this.scene.add.text(t,0,"00000",{fontSize:25,fontFamily:"Arial",color:"#535353",resolution:5}).setOrigin(1,0),this.bestText=this.scene.add.text(t-this.currentText.width-15,0,this.best.toString().padStart(5,"0"),{fontSize:25,fontFamily:"Arial",color:"#535353",resolution:2}).setOrigin(1,0),this.bestTextPrefix=this.scene.add.text(t-this.currentText.width-this.bestText.width-15-7.5,0,"HI",{fontSize:25,fontFamily:"Arial",color:"#535353",resolution:2}).setOrigin(1,0),this.add([this.currentText,this.bestTextPrefix,this.bestText]),this.scene.events.on(n,this.start,this),this.scene.events.on(h,this.start,this),this.scene.events.on(a,this.stop,this),this.scene.events.on(r,(()=>{this.scene.tweens.add({targets:this.currentText,duration:100,scale:1.1,repeat:2,alpha:0,yoyo:!0})}),this)}update(t,e){"calculating"===this.state&&(this.delta+=e,this.delta>=this.interval&&(this.delta=0,this.setScore(this.current+1)))}start(){this.state="calculating",this.setScore(0),this.best>0&&(this.bestText.setVisible(!0),this.bestTextPrefix.setVisible(!0)),this.setVisible(!0)}stop(){this.state="stopped",this.setVisible(!0)}setScore(t){this.current=t,this.currentText.text=this.current.toString().padStart(5,"0"),this.current>0&&this.current%100==0&&(this.scene.sound.play("score"),this.scene.events.emit(o,this.current)),this.current>this.best&&(this.best=this.current,this.bestText.text=this.best.toString().padStart(5,"0"),((t,e)=>{if(!t)throw new Error("Key not specified");try{localStorage.setItem(t,e.toString())}catch(s){console.error("Failed to set local storage",{key:t,value:e},s)}})(this.bestScoreKey,this.best))}}class b extends Phaser.GameObjects.Sprite{constructor(t,{x:s,y:i}){super(t,s,i,t.sound.mute?"sound-off":"sound-on",0),e(this,"baseScale",.4),t.add.existing(this),this.init()}init(){this.setInteractive({cursor:"pointer"}).setScale(this.baseScale).on("pointerover",(()=>{this.scene.tweens.add({scale:1.1*this.baseScale,targets:this,duration:250,ease:Phaser.Math.Easing.Sine.InOut})}),this).on("pointerout",(()=>{this.scene.tweens.add({scale:this.baseScale,targets:this,duration:250,ease:Phaser.Math.Easing.Sine.InOut})}),this).on("pointerdown",((t,e,s,i)=>{this.scene.sound.mute?(this.setTexture("sound-on"),this.scene.sound.setMute(!1)):(this.setTexture("sound-off"),this.scene.sound.setMute(!0)),i.stopPropagation()}),this)}}class f extends Phaser.Scene{constructor(){super("Play"),e(this,"isGameRunning",!1),e(this,"gameSpeedModifier",1),e(this,"gameSpeedModifierIncrease",.1),e(this,"gameSpeedBase",750),e(this,"backgroundMusic"),e(this,"backgroundLoseMusic"),e(this,"soundToggleButton"),e(this,"ground"),e(this,"clouds"),e(this,"startTrigger"),e(this,"gameOver"),e(this,"score"),e(this,"player"),e(this,"obstacles")}get gameHeight(){return this.scale.height}get gameSpeed(){return this.gameSpeedBase*this.gameSpeedModifier}create(){this.initEnvironment(),this.initPlayer(),this.initStartTrigger(),this.handleCollisions(),this.events.on(o,this.increaseSpeed,this)}update(t,e){this.isGameRunning&&(this.ground.tilePositionX+=this.gameSpeed*e/1e3)}initEnvironment(){this.backgroundMusic=this.sound.add("background",{loop:!0,volume:.05}),this.backgroundLoseMusic=this.sound.add("background-lose",{loop:!0,volume:.05}),this.backgroundMusic.play(),this.ground=this.add.tileSprite(0,this.scale.height,88,26,"ground").setOrigin(0,1),this.clouds=new c(this,this.gameSpeed),this.obstacles=new p(this,this.gameSpeed),this.gameOver=new u(this,this.handleRestart.bind(this)),this.score=new y(this),this.soundToggleButton=new b(this,{x:2,y:2}).setOrigin(0,0)}initPlayer(){this.player=new g(this,this.gameSpeed)}initStartTrigger(){this.startTrigger=this.physics.add.sprite(0,10,null).setAlpha(0).setOrigin(0,1),this.physics.add.overlap(this.player,this.startTrigger,(()=>{10!==this.startTrigger.y?(this.startTrigger.body.reset(9999,9999),this.start()):this.startTrigger.body.reset(0,this.gameHeight)}))}start(){this.tweens.add({targets:this.ground,width:1e3,duration:500,ease:"Linear",callbackScope:this,onComplete:()=>{this.isGameRunning=!0,this.events.emit(n)}})}handleCollisions(){this.physics.add.collider(this.player,this.obstacles,((t,e)=>{this.isGameRunning&&(this.handleDeath(e),this.events.emit(a))}),null,this)}handleDeath(t){this.isGameRunning=!1,this.backgroundMusic.stop(),this.backgroundLoseMusic.play(),this.time.delayedCall(50,(()=>{this.physics.pause()}),null,this),t.texture.key.includes("bird")&&this.tweens.add({targets:t,x:-100,duration:500,ease:"Linear"})}handleRestart(){this.physics.resume(),this.gameOver.setVisible(!1),this.obstacles.clear(!0,!0),this.player.setVelocityY(0),this.anims.resumeAll(),this.resetSpeed(),this.backgroundLoseMusic.stop(),this.backgroundMusic.play(),this.time.delayedCall(250,(()=>{this.events.emit(h),this.isGameRunning=!0}),null,this)}resetSpeed(){this.gameSpeedModifier=1,this.events.emit(r,this.gameSpeed)}increaseSpeed(){this.gameSpeedModifier+=this.gameSpeedModifierIncrease,this.events.emit(r,this.gameSpeed)}}const S={type:s.AUTO,height:340,width:1e3,min:{width:340,height:0},parent:"game-container",pixelArt:!0,transparent:!0,autoFocus:!0,physics:{default:"arcade",arcade:{debug:!1}},scale:{mode:s.Scale.FIT,autoCenter:s.Scale.CENTER_BOTH},scene:[i,d,f]};new s.Game(S);
