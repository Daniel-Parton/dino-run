var e=Object.defineProperty,t=(t,s,i)=>(((t,s,i)=>{s in t?e(t,s,{enumerable:!0,configurable:!0,writable:!0,value:i}):t[s]=i})(t,"symbol"!=typeof s?s+"":s,i),i);import{P as s}from"./phaser.306bab35.js";!function(){const e=document.createElement("link").relList;if(!(e&&e.supports&&e.supports("modulepreload"))){for(const e of document.querySelectorAll('link[rel="modulepreload"]'))t(e);new MutationObserver((e=>{for(const s of e)if("childList"===s.type)for(const e of s.addedNodes)"LINK"===e.tagName&&"modulepreload"===e.rel&&t(e)})).observe(document,{childList:!0,subtree:!0})}function t(e){if(e.ep)return;e.ep=!0;const t=function(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerpolicy&&(t.referrerPolicy=e.referrerpolicy),"use-credentials"===e.crossorigin?t.credentials="include":"anonymous"===e.crossorigin?t.credentials="omit":t.credentials="same-origin",t}(e);fetch(e.href,t)}}();class i extends Phaser.Scene{constructor(){super("Boot")}preload(){this.load.setPath("./assets"),this.load.image("ground","ground.png"),this.load.image("cloud","cloud.png")}create(){this.scene.start("Preload")}}const n="GAME_STARTED",a="GAME_PLAYER_HIT_GROUND",h="GAME_PLAYER_DIED",r="GAME_RESTARTED",o="GAME_SPEED_UPDATED",d="GAME_SCORE_TIER_UPDATED";class c extends Phaser.Scene{constructor(){super("Preload")}preload(){this.load.setPath("./assets"),this.load.image("dino-idle","dino-idle-2.png"),this.load.image("dino-hurt","dino-hurt.png"),this.loadAudio("dino-hurt"),this.loadAudio("dino-jump"),this.loadAudio("dino-run-start"),this.loadAudio("dino-down"),this.load.spritesheet("dino-down","dino-down-2.png",{frameWidth:118,frameHeight:94}),this.load.spritesheet("dino-run","dino-run.png",{frameWidth:88,frameHeight:94});for(let e=0;e<6;e++){const t=e+1;this.load.image(`cactus-${t}`,`cactuses_${t}.png`)}for(let e=0;e<1;e++){const t=e+1;this.load.spritesheet(`bird-${t}`,`enemy-bird-${t}.png`,{frameWidth:92,frameHeight:77})}this.load.image("restart","restart.png"),this.load.image("game-over","game-over.png"),this.load.image("sound-on","sound-on.png"),this.load.image("sound-off","sound-off.png"),this.load.image("full-screen","full-screen.png"),this.loadAudio("score"),this.loadAudio("background-lose"),this.loadAudio("background")}create(){this.scene.start("Play")}loadAudio(e){this.load.audio(e,[".mp3",".ogg",".m4a"].map((t=>`${e}${t}`)))}}class l extends Phaser.Physics.Arcade.Group{constructor(e,s){const i=e.scale.width;super(e.physics.world,e,[e.add.image(i/2,170,"cloud"),e.add.image(i-80,80,"cloud"),e.add.image(i/1.3,100,"cloud")]),t(this,"gameSpeed"),t(this,"state","paused"),t(this,"cleanupTimer",0),t(this,"cleanupTimerInterval",10),this.gameSpeed=s,this.setVisible(!1),e.add.existing(this),e.physics.add.existing(this),this.init()}init(){this.scene.events.on(Phaser.Scenes.Events.UPDATE,this.update,this),this.scene.events.on(n,this.start,this),this.scene.events.on(o,(e=>{this.gameSpeed=e,this.setVelocityX(-this.gameSpeed/20)}),this)}update(e,t){"running"===this.state&&(this.cleanupTimer+=t,this.cleanupTimer>=this.cleanupTimerInterval&&(this.cleanupTimer=0,this.cleanup()))}start(){this.state="running",this.setVisible(!0),this.setVelocityX(-this.gameSpeed/20)}cleanup(){this.getChildren().forEach((e=>{e.getBounds().right<0&&e.setX(this.scene.scale.width+e.width)}),this)}}class u extends Phaser.GameObjects.Image{constructor(e,{x:s,y:i}){super(e,s,i,"full-screen"),t(this,"baseScale",.4),e.add.existing(this),this.init()}init(){this.setInteractive({cursor:"pointer"}).setScale(this.baseScale).on("pointerover",(()=>{this.scene.tweens.add({scale:1.1*this.baseScale,targets:this,duration:250,ease:Phaser.Math.Easing.Sine.InOut})}),this).on("pointerout",(()=>{this.scene.tweens.add({scale:this.baseScale,targets:this,duration:250,ease:Phaser.Math.Easing.Sine.InOut})}),this).on("pointerdown",((e,t,s,i)=>{this.scene.scale.toggleFullscreen(),i.stopPropagation()}),this)}}class p extends Phaser.GameObjects.Image{constructor(e,{key:s,x:i,y:n,onClick:a}){super(e,i,n,s,0),t(this,"onClick"),t(this,"onClickThis"),e.add.existing(this),this.init({onClick:a})}init({onClick:e}){this.setInteractive({cursor:"pointer"}).on("pointerover",(()=>{this.scene.tweens.add({scale:1.25,targets:this,duration:250,ease:Phaser.Math.Easing.Sine.InOut})}),this).on("pointerout",(()=>{this.scene.tweens.add({scale:1,targets:this,duration:250,ease:Phaser.Math.Easing.Sine.InOut})}),this).on("pointerdown",e)}}class g extends Phaser.GameObjects.Container{constructor(e,s){const{width:i,height:n}=e.scale;super(e,i/2,n/2),t(this,"gameOverText"),t(this,"restartButton"),this.setVisible(!1),e.add.existing(this),e.physics.add.existing(this),this.init(s)}init(e){this.gameOverText=this.scene.add.image(0,-30,"game-over").setOrigin(.5);const t=this;this.restartButton=new p(this.scene,{x:0,y:30,key:"restart",onClick:()=>{e(),t.setVisible(!1)}}).setOrigin(.5),this.add([this.gameOverText,this.restartButton]),this.scene.events.on(h,(()=>this.setVisible(!0)),this),this.scene.events.on(r,(()=>this.setVisible(!1)),this)}}class m extends Phaser.Physics.Arcade.Group{constructor(e,s){super(e.physics.world,e),t(this,"gameSpeed"),t(this,"state","paused"),t(this,"obstacleLookup",[]),t(this,"spawnInterval",1500),t(this,"cleanupTimer",0),t(this,"cleanupTimerInterval",100),t(this,"spawnTimer",0),t(this,"spawnXRange",{min:150,max:300}),e.add.existing(this),e.physics.add.existing(this),this.gameSpeed=s,this.init()}init(){for(let e=1;e<=6;e++)this.obstacleLookup.push({type:"cactus",key:`cactus-${e}`});for(let e=1;e<=1;e++)this.obstacleLookup.push({type:"bird",key:`bird-${e}`}),this.scene.anims.create({key:`bird-${e}-fly`,frames:this.scene.anims.generateFrameNumbers(`bird-${e}`),frameRate:6,repeat:-1});this.scene.events.on(Phaser.Scenes.Events.UPDATE,this.update,this),this.scene.events.on(n,this.start,this),this.scene.events.on(r,this.start,this),this.scene.events.on(h,this.pause,this),this.scene.events.on(o,(e=>{this.gameSpeed=e,this.getChildren().forEach((e=>{e.setVelocityX(-this.gameSpeed)}),this)}),this)}update(e,t){"running"===this.state&&(this.spawnTimer+=t,this.spawnTimer>=this.spawnInterval&&(this.spawnTimer=0,this.spawn()),this.cleanupTimer+=t,this.cleanupTimer>=this.cleanupTimerInterval&&(this.cleanupTimer=0,this.cleanup()))}start(){this.state="running"}pause(){this.state="paused"}spawn(){const e=this.scene.scale.height,t=this.scene.scale.width,s=Math.floor(Math.random()*this.obstacleLookup.length),i=this.obstacleLookup[s],n=t+Phaser.Math.Between(this.spawnXRange.min,this.spawnXRange.max);if("bird"===i.type){const t=0===Phaser.Math.Between(0,1);this.spawnBird(i.key,n,e-(t?20:70))}else this.spawnCactus(i.key,n,e)}spawnBird(e,t,s){const i=this.create(t,s,e).setOrigin(0,1).setImmovable(!0).setVelocityX(-this.gameSpeed);i.setBodySize(i.width-15,i.height-20),i.anims.play(`${e}-fly`,!0)}spawnCactus(e,t,s){this.create(t,s,e).setOrigin(0,1).setImmovable(!0).setVelocityX(-this.gameSpeed)}cleanup(){this.getChildren().forEach((e=>{e.getBounds().right<0&&this.remove(e,!0,!0)}),this)}}class y extends Phaser.Physics.Arcade.Sprite{constructor(e,s){super(e,0,e.scale.height,"dino-run",0),t(this,"gameSpeed"),t(this,"hasRanOnce",!1),t(this,"state","idle"),t(this,"cursors"),t(this,"idleEvent"),t(this,"idleBlinks",0),t(this,"inJumpLag"),t(this,"jumpTimer",0),t(this,"jumpVelocity",1550),t(this,"jumpGravityReduction",200),t(this,"gravity",6500),this.gameSpeed=s,e.add.existing(this),e.physics.add.existing(this),this.setGravityY(this.gravity),this.init()}init(){this.cursors=this.scene.input.keyboard.createCursorKeys(),this.setInteractive({cursor:"pointer"}),this.setOrigin(0,1).setDepth(1).setGravityY(5e3).setOffset(20,0).setCollideWorldBounds(!0),this.setRegularHitBox(),this.scene.events.on(Phaser.Scenes.Events.UPDATE,this.update,this),this.initAnimations(),this.idle(),this.scene.events.on(n,this.run,this),this.scene.events.on(h,this.die,this),this.scene.events.on(r,this.run,this)}initAnimations(){this.anims.create({key:"dino-idle",frames:this.anims.generateFrameNumbers("dino-run",{start:0,end:2}),frameRate:5,repeat:0}),this.anims.create({key:"dino-run",frames:this.anims.generateFrameNumbers("dino-run",{start:2,end:3}),frameRate:10,repeat:-1}),this.anims.create({key:"dino-blink",frames:this.anims.generateFrameNumbers("dino-run",{start:0,end:1}),frameRate:5,repeat:-1}),this.anims.create({key:"dino-down",frames:this.anims.generateFrameNumbers("dino-down",{start:0,end:1}),frameRate:10,repeat:-1})}initSounds(){this.scene.sound.add("dino-hurt"),this.scene.sound.add("dino-run-start"),this.scene.sound.add("dino-down"),this.scene.sound.add("dino-jump")}update(){if("dead"===this.state)return;const{space:e,down:t}=this.cursors,s=e.isDown,i=this.body.onFloor(),n=Phaser.Input.Keyboard.JustUp(t),h=this.scene.input.activePointer;let r=h.isDown&&!h.rightButtonDown();const o=s||r;i&&(o&&this.jump(),"idle"===this.state||this.inJumpLag||("down"!==this.state&&t.isDown&&this.getDown(),(n||"jumping"===this.state&&!this.inJumpLag)&&(this.scene.events.emit(a),this.hasRanOnce?this.run():this.idle()))),"jumping"===this.state&&o&&this.jumpTimer>0?this.jumpTimer>20?(this.jumpTimer=0,this.setGravityY(this.gravity)):(this.jumpTimer++,this.setGravityY(this.body.gravity.y-this.jumpGravityReduction)):(this.jumpTimer=0,this.setGravityY(this.body.velocity.y<-500?this.gravity+1e3:this.gravity))}jump(){this.state="jumping",this.jumpTimer=1,this.scene.sound.play("dino-jump"),this.idleEvent&&this.idleEvent.remove(),this.setVelocityY(-this.jumpVelocity),this.play("dino-blink",!0),this.inJumpLag=!0,this.scene.time.delayedCall(50,(()=>{this.inJumpLag=!1,this.setRegularHitBox()}),null,this)}die(){this.state="dead",this.stop(),this.setTexture("dino-hurt",0),this.scene.sound.play("dino-hurt"),this.setRegularHitBox(),this.scene.tweens.add({targets:this,y:this.scene.scale.height,duration:250,ease:"Linear",onComplete:()=>{},callbackScope:this})}restart(){this.initRun(),this.run()}initRun(){this.scene.tweens.add({targets:this,x:50,duration:500,ease:"Linear",callbackScope:this})}run(){this.hasRanOnce||(this.input.cursor="auto",this.setInteractive({cursor:"default"}),this.hasRanOnce=!0,this.scene.sound.play("dino-run-start",{volume:.3})),this.state="running",this.jumpTimer=0,this.play("dino-run",!0),this.setRegularHitBox(),this.getBounds().left<50&&this.initRun()}getDown(){this.state="down",this.jumpTimer=0,this.play("dino-down",!0),this.scene.sound.play("dino-down",{volume:.5}),this.body.setSize(this.body.width,58),this.setOffset(60,34)}idle(){this.state="idle",this.setRegularHitBox(),this.idleEvent=this.scene.time.addEvent({delay:2e3,callback:()=>{"idle"===this.state&&(this.idleBlinks<5?(this.play("dino-idle",!0),++this.idleBlinks):(this.idleBlinks=0,this.play("dino-run",!0)))},callbackScope:this,loop:!0})}setRegularHitBox(){this.body.setSize(44,92),this.body.setOffset(20,0)}}const b=(e,t=0)=>{var s;const i=(e=>{var t;if(!e)throw new Error("Key not specified");try{const t=localStorage.getItem(e);return null!==t?t:void 0}catch(s){console.error(`Error getting ${e} from local storage. Error: ${null==(t=s||"")?void 0:t.toString()}`,{key:e},s)}})(e);if(!i)return t;try{const e=parseInt(i);return isNaN(e)?t:e}catch(n){console.error(`Error parsing ${i} from key ${e} to int from local storage. Error: ${null==(s=n||"")?void 0:s.toString()}`,{stringValue:i,key:e},n)}return t};class v extends Phaser.GameObjects.Container{constructor(e){super(e,0,0),t(this,"bestScoreKey","bestScore"),t(this,"state","stopped"),t(this,"currentText"),t(this,"bestText"),t(this,"bestTextPrefix"),t(this,"best",0),t(this,"current",0),t(this,"interval",25),t(this,"delta",0),this.setVisible(!1),e.add.existing(this),e.physics.add.existing(this),this.init()}init(){this.scene.sound.add("score"),this.scene.events.on(Phaser.Scenes.Events.UPDATE,this.update,this),this.best=b(this.bestScoreKey);const e=this.scene.scale.width;this.currentText=this.scene.add.text(e-5,0,"00000",{fontSize:25,fontFamily:"Arial",color:"#535353"}).setOrigin(1,0),this.bestText=this.scene.add.text(e-5-this.currentText.width-15,0,this.best.toString().padStart(5,"0"),{fontSize:25,fontFamily:"Arial",color:"#535353"}).setOrigin(1,0),this.bestTextPrefix=this.scene.add.text(e-this.currentText.width-this.bestText.width-15-7.5,0,"HI",{fontSize:25,fontFamily:"Arial",color:"#535353"}).setOrigin(1,0),this.add([this.currentText,this.bestTextPrefix,this.bestText]),this.scene.events.on(n,this.start,this),this.scene.events.on(r,this.start,this),this.scene.events.on(h,this.stop,this),this.scene.events.on(o,(()=>{this.scene.tweens.add({targets:this.currentText,duration:100,scale:1.1,repeat:2,alpha:0,yoyo:!0})}),this)}update(e,t){"calculating"===this.state&&(this.delta+=t,this.delta>=this.interval&&(this.delta=0,this.setScore(this.current+1)))}start(){this.state="calculating",this.setScore(0),this.best>0&&(this.bestText.setVisible(!0),this.bestTextPrefix.setVisible(!0)),this.setVisible(!0)}stop(){this.state="stopped",this.setVisible(!0)}setScore(e){this.current=e,this.currentText.text=this.current.toString().padStart(5,"0"),this.current>0&&this.current%100==0&&(this.scene.sound.play("score"),this.scene.events.emit(d,this.current)),this.current>this.best&&(this.best=this.current,this.bestText.text=this.best.toString().padStart(5,"0"),((e,t)=>{if(!e)throw new Error("Key not specified");try{localStorage.setItem(e,t.toString())}catch(s){console.error("Failed to set local storage",{key:e,value:t},s)}})(this.bestScoreKey,this.best))}}class f extends Phaser.GameObjects.Sprite{constructor(e,{x:s,y:i}){super(e,s,i,e.sound.mute?"sound-off":"sound-on",0),t(this,"baseScale",.4),e.add.existing(this),this.init()}init(){this.setInteractive({cursor:"pointer"}).setScale(this.baseScale).on("pointerover",(()=>{this.scene.tweens.add({scale:1.1*this.baseScale,targets:this,duration:250,ease:Phaser.Math.Easing.Sine.InOut})}),this).on("pointerout",(()=>{this.scene.tweens.add({scale:this.baseScale,targets:this,duration:250,ease:Phaser.Math.Easing.Sine.InOut})}),this).on("pointerdown",((e,t,s,i)=>{this.scene.sound.mute?(this.setTexture("sound-on"),this.scene.sound.setMute(!1)):(this.setTexture("sound-off"),this.scene.sound.setMute(!0)),i.stopPropagation()}),this)}}class S extends Phaser.Scene{constructor(){super("Play"),t(this,"isGameRunning",!1),t(this,"gameSpeedModifier",1),t(this,"gameSpeedModifierIncrease",.1),t(this,"gameSpeedBase",750),t(this,"backgroundMusic"),t(this,"backgroundLoseMusic"),t(this,"soundToggleButton"),t(this,"fullScreenToggleButton"),t(this,"ground"),t(this,"clouds"),t(this,"gameOver"),t(this,"score"),t(this,"player"),t(this,"obstacles")}get gameHeight(){return this.scale.height}get gameSpeed(){return this.gameSpeedBase*this.gameSpeedModifier}create(){this.initEnvironment(),this.initPlayer(),this.handleCollisions(),this.events.on(d,this.increaseSpeed,this),this.events.on(a,(()=>{this.isGameRunning||this.start()}),this)}update(e,t){this.isGameRunning&&(this.ground.tilePositionX+=this.gameSpeed*t/1e3)}initEnvironment(){this.backgroundMusic=this.sound.add("background",{loop:!0,volume:.05}),this.backgroundLoseMusic=this.sound.add("background-lose",{loop:!0,volume:.05}),this.backgroundMusic.play(),this.ground=this.add.tileSprite(0,this.scale.height,88,26,"ground").setOrigin(0,1),this.clouds=new l(this,this.gameSpeed),this.obstacles=new m(this,this.gameSpeed),this.gameOver=new g(this,this.handleRestart.bind(this)),this.score=new v(this),this.soundToggleButton=new f(this,{x:2,y:2}).setOrigin(0,0),this.fullScreenToggleButton=new u(this,{x:45,y:2}).setOrigin(0,0)}initPlayer(){this.player=new y(this,this.gameSpeed)}start(){this.tweens.add({targets:this.ground,width:1e3,duration:500,ease:"Linear",callbackScope:this,onComplete:()=>{this.isGameRunning=!0,this.events.emit(n)}})}handleCollisions(){this.physics.add.collider(this.player,this.obstacles,((e,t)=>{this.isGameRunning&&(this.handleDeath(t),this.events.emit(h))}),null,this)}handleDeath(e){this.isGameRunning=!1,this.backgroundMusic.stop(),this.backgroundLoseMusic.play(),this.time.delayedCall(50,(()=>{this.physics.pause()}),null,this),e.texture.key.includes("bird")&&this.tweens.add({targets:e,x:-100,duration:500,ease:"Linear"})}handleRestart(){this.physics.resume(),this.gameOver.setVisible(!1),this.obstacles.clear(!0,!0),this.player.setVelocityY(0),this.anims.resumeAll(),this.resetSpeed(),this.backgroundLoseMusic.stop(),this.backgroundMusic.play(),this.time.delayedCall(250,(()=>{this.events.emit(r),this.isGameRunning=!0}),null,this)}resetSpeed(){this.gameSpeedModifier=1,this.events.emit(o,this.gameSpeed)}increaseSpeed(){this.gameSpeedModifier+=this.gameSpeedModifierIncrease,this.events.emit(o,this.gameSpeed)}}const w=()=>!!(navigator.userAgent.match(/Android/i)||navigator.userAgent.match(/webOS/i)||navigator.userAgent.match(/iPhone/i)||navigator.userAgent.match(/iPad/i)||navigator.userAgent.match(/iPod/i)||navigator.userAgent.match(/BlackBerry/i)||navigator.userAgent.match(/Windows Phone/i)),x=e=>{const t=e.sound.context;t&&"suspended"===t.state&&t.resume()},T={type:s.AUTO,height:340,width:1e3,min:{width:340,height:0},parent:"game-container",pixelArt:!0,transparent:!0,autoFocus:!0,physics:{default:"arcade",arcade:{debug:!1}},scale:{mode:s.Scale.FIT,autoCenter:s.Scale.CENTER_BOTH,fullscreenTarget:"game-container"},scene:[i,c,S]},P=new s.Game(T);document.body.addEventListener("click",(()=>x(P))),document.body.addEventListener("touchend",(()=>{w()&&P.scale.startFullscreen(),x(P)})),P.scale.on("enterfullscreen",(()=>{var e;P.scale.refresh();const t=screen.orientation;w()&&(null==(e=t.lock)||e.call(t,"landscape").catch((function(e){console.error("Orientation lock error: "+e)})))}));
