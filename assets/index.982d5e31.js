var e=Object.defineProperty,t=(t,s,i)=>(((t,s,i)=>{s in t?e(t,s,{enumerable:!0,configurable:!0,writable:!0,value:i}):t[s]=i})(t,"symbol"!=typeof s?s+"":s,i),i);import{P as s}from"./phaser.306bab35.js";!function(){const e=document.createElement("link").relList;if(!(e&&e.supports&&e.supports("modulepreload"))){for(const e of document.querySelectorAll('link[rel="modulepreload"]'))t(e);new MutationObserver((e=>{for(const s of e)if("childList"===s.type)for(const e of s.addedNodes)"LINK"===e.tagName&&"modulepreload"===e.rel&&t(e)})).observe(document,{childList:!0,subtree:!0})}function t(e){if(e.ep)return;e.ep=!0;const t=function(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerpolicy&&(t.referrerPolicy=e.referrerpolicy),"use-credentials"===e.crossorigin?t.credentials="include":"anonymous"===e.crossorigin?t.credentials="omit":t.credentials="same-origin",t}(e);fetch(e.href,t)}}();class i extends Phaser.Scene{constructor(){super("Boot")}preload(){this.load.setPath("./assets"),this.load.image("ground","ground.png")}create(){this.scene.start("Preload")}}class a extends Phaser.Scene{constructor(){super("Preload")}init(){this.add.tileSprite(0,this.scale.height,1e3,26,"ground").setOrigin(0,1)}preload(){this.load.setPath("./assets"),this.load.image("dino-idle","dino-idle-2.png"),this.load.image("dino-hurt","dino-hurt.png"),this.load.audio("dino-hurt","dino-hurt.mp3"),this.load.spritesheet("dino-down","dino-down-2.png",{frameWidth:118,frameHeight:94}),this.load.spritesheet("dino-run","dino-run.png",{frameWidth:88,frameHeight:94}),this.load.image("restart","restart.png"),this.load.image("game-over","game-over.png");for(let e=0;e<6;e++){const t=e+1;this.load.image(`cactus-${t}`,`cactuses_${t}.png`)}for(let e=0;e<1;e++){const t=e+1;this.load.spritesheet(`bird-${t}`,`enemy-bird-${t}.png`,{frameWidth:92,frameHeight:77})}}create(){this.scene.start("Play")}}class n extends Phaser.GameObjects.Image{constructor(e,{key:s,x:i,y:a,onClick:n,onClickThis:r}){super(e,i,a,s,0),t(this,"onClick"),t(this,"onClickThis"),e.add.existing(this),this.init({onClick:n,onClickThis:r})}init({onClick:e,onClickThis:t}){this.setInteractive({cursor:"pointer"}).on("pointerover",(()=>{this.scene.tweens.add({scale:1.25,targets:this,duration:250,ease:Phaser.Math.Easing.Sine.InOut})}),this).on("pointerout",(()=>{this.scene.tweens.add({scale:1,targets:this,duration:250,ease:Phaser.Math.Easing.Sine.InOut})}),this).on("pointerdown",e,t)}}class r extends Phaser.Physics.Arcade.Sprite{constructor(e,s,i){super(e,s,i,"dino-run",0),t(this,"state","idle"),t(this,"cursors"),t(this,"idleEvent"),t(this,"idleBlinks",0),t(this,"inJumpLag"),e.add.existing(this),e.physics.add.existing(this),this.init()}init(){this.cursors=this.scene.input.keyboard.createCursorKeys(),this.setOrigin(0,1).setGravityY(5e3).setCollideWorldBounds(!0),this.setRegularHitBox(),this.scene.events.on(Phaser.Scenes.Events.UPDATE,this.update,this),this.initAnimations(),this.idle()}initAnimations(){this.anims.create({key:"dino-idle",frames:this.anims.generateFrameNumbers("dino-run",{start:0,end:2}),frameRate:5,repeat:0}),this.anims.create({key:"dino-run",frames:this.anims.generateFrameNumbers("dino-run",{start:2,end:3}),frameRate:10,repeat:-1}),this.anims.create({key:"dino-blink",frames:this.anims.generateFrameNumbers("dino-run",{start:0,end:1}),frameRate:5,repeat:-1}),this.anims.create({key:"dino-down",frames:this.anims.generateFrameNumbers("dino-down",{start:0,end:1}),frameRate:10,repeat:-1})}initSounds(){this.scene.sound.add("dino-hurt")}update(){if("dead"===this.state)return;const{space:e,down:t}=this.cursors,s=Phaser.Input.Keyboard.JustDown(e),i=this.scene.input.mousePointer.leftButtonDown(),a=this.body.onFloor();Phaser.Input.Keyboard.JustDown(t);const n=Phaser.Input.Keyboard.JustUp(t);a&&((s||i)&&this.jump(),"idle"===this.state||this.inJumpLag||("down"!==this.state&&t.isDown&&this.getDown(),(n||"jumping"===this.state&&!this.inJumpLag)&&this.run()))}jump(){this.state="jumping",this.idleEvent&&this.idleEvent.remove(),this.setVelocityY(-1600),this.play("dino-blink",!0),this.inJumpLag=!0,setTimeout((()=>{this.inJumpLag=!1,this.setRegularHitBox()}),50)}die(){this.state="dead",this.setTexture("dino-hurt",0),this.scene.sound.play("dino-hurt"),this.setRegularHitBox()}restart(){this.initRun(),this.run()}initRun(){this.scene.tweens.add({targets:this,x:50,duration:500,ease:"Linear",callbackScope:this})}run(){this.state="running",this.play("dino-run",!0),this.setRegularHitBox()}getDown(){this.state="down",this.play("dino-down",!0),this.body.setSize(this.body.width,58),this.setOffset(60,34)}idle(){this.state="idle",this.setRegularHitBox(),this.idleEvent=this.scene.time.addEvent({delay:2e3,callback:()=>{"idle"===this.state&&(this.idleBlinks<5?(this.play("dino-idle",!0),++this.idleBlinks):(this.idleBlinks=0,this.play("dino-run",!0)))},callbackScope:this,loop:!0})}setRegularHitBox(){this.body.setSize(44,92),this.body.setOffset(20,0)}}class h extends Phaser.Scene{constructor(){super("Play"),t(this,"isGameRunning",!1),t(this,"gameSpeed",750),t(this,"spawnInterval",1500),t(this,"cleanupTimer",0),t(this,"cleanupTimerInterval",1e3),t(this,"spawnTimer",0),t(this,"spawnXRange",{min:600,max:900}),t(this,"gameOver"),t(this,"gameOverText"),t(this,"restartButton"),t(this,"player"),t(this,"ground"),t(this,"startTrigger"),t(this,"obstacles"),t(this,"obstacleLookup",[]);for(let e=1;e<=6;e++)this.obstacleLookup.push({type:"cactus",key:`cactus-${e}`});for(let e=1;e<=1;e++)this.obstacleLookup.push({type:"bird",key:`bird-${e}`})}get gameHeight(){return this.scale.height}create(){this.initEnvironment(),this.initGameOverScreen(),this.initPlayer(),this.initStartTrigger(),this.handleCollisions()}update(e,t){this.isGameRunning&&(this.spawnTimer+=t,this.spawnTimer>=this.spawnInterval&&(this.spawnTimer=0,this.spawnObstacle()),this.cleanupTimer+=t,this.cleanupTimer>=this.cleanupTimerInterval&&(this.cleanupTimer=0,this.obstacles.getChildren().forEach((e=>{e.getBounds().right<0&&this.obstacles.remove(e,!0,!0)}),this)),this.ground.tilePositionX+=this.gameSpeed*t/1e3)}initEnvironment(){this.ground=this.add.tileSprite(0,this.scale.height,88,26,"ground").setOrigin(0,1),this.obstacles=this.physics.add.group()}initGameOverScreen(){this.gameOverText=this.add.image(0,-30,"game-over").setVisible(!1).setOrigin(.5),this.restartButton=new n(this,{x:0,y:30,key:"restart",onClick:()=>{this.handleRestart()},onClickThis:this}).setOrigin(.5).setVisible(!1),this.gameOver=this.add.container(this.scale.width/2,this.scale.height/2),this.gameOver.add([this.gameOverText,this.restartButton]),this.gameOver.setVisible(!1),this.gameOverText.setVisible(!0),this.restartButton.setVisible(!0)}initPlayer(){this.player=new r(this,0,this.gameHeight)}initStartTrigger(){this.startTrigger=this.physics.add.sprite(0,10,null).setAlpha(0).setOrigin(0,1),this.physics.add.overlap(this.player,this.startTrigger,(()=>{10!==this.startTrigger.y?(this.startTrigger.body.reset(9999,9999),this.startGame()):this.startTrigger.body.reset(0,this.gameHeight)}))}startGame(){this.tweens.add({targets:this.ground,width:1e3,duration:500,ease:"Linear",callbackScope:this,onComplete:()=>{this.isGameRunning=!0,this.player.run(),this.obstacles.setVelocityX(-200)}})}spawnObstacle(){const e=Math.floor(Math.random()*this.obstacleLookup.length),t=Phaser.Math.Between(this.spawnXRange.min,this.spawnXRange.max),s=this.obstacleLookup[e];let i;if("bird"===s.type){const e=this.gameHeight-Phaser.Math.Between(20,70);i=this.obstacles.create(t,e,s.key)}else i=this.obstacles.create(t,this.gameHeight,s.key);i.setOrigin(0,1).setImmovable(!0).setVelocityX(-this.gameSpeed)}handleCollisions(){this.physics.add.collider(this.player,this.obstacles,(()=>{this.handleDeath()}),null,this)}handleDeath(){this.isGameRunning=!1,this.physics.pause(),this.player.die(),this.spawnTimer=0,this.cleanupTimer=0,this.gameSpeed=500,this.gameOver.setVisible(!0)}handleRestart(){this.physics.resume(),this.gameOver.setVisible(!1),this.obstacles.clear(!0,!0),this.player.setVelocityY(0),this.anims.resumeAll(),setTimeout((()=>{this.player.restart(),this.isGameRunning=!0}),250)}}const o={type:s.AUTO,width:1e3,height:340,parent:"game-container",pixelArt:!0,transparent:!0,physics:{default:"arcade",arcade:{debug:!1}},scale:{mode:s.Scale.FIT,autoCenter:s.Scale.CENTER_BOTH},scene:[i,a,h]};new s.Game(o);
